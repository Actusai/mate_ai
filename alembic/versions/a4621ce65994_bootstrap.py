"""bootstrap

Revision ID: a4621ce65994
Revises: 
Create Date: 2025-09-07 15:31:29.453516

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a4621ce65994'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ai_systems', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('last_activity_at')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.alter_column('company_type',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=True)
        batch_op.drop_column('status')
        batch_op.drop_column('is_enterprise')
        batch_op.drop_column('deleted_at')
        batch_op.drop_column('last_activity_at')
        batch_op.drop_column('activated_at')
        batch_op.drop_column('suspended_at')

    with op.batch_alter_table('company_packages', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'packages', ['package_id'], ['id'], ondelete='RESTRICT')

    with op.batch_alter_table('compliance_tasks', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('ai_system_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('severity',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('mandatory',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('reminder_days_before',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_ai_system_id'), ['ai_system_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_due_date'), ['due_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_owner_user_id'), ['owner_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_reference'), ['reference'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_compliance_tasks_title'), ['title'], unique=False)
        batch_op.create_index('ix_tasks_company_status', ['company_id', 'status'], unique=False)
        batch_op.create_index('ix_tasks_owner_status', ['owner_user_id', 'status'], unique=False)
        batch_op.create_index('ix_tasks_system_status', ['ai_system_id', 'status'], unique=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'ai_systems', ['ai_system_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('priority')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('channel',
               existing_type=sa.TEXT(),
               server_default=None,
               type_=sa.String(length=30),
               existing_nullable=False)
        batch_op.alter_column('subject',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.TEXT(),
               server_default=None,
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'ai_systems', ['ai_system_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('owner_task_stats_daily', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('total_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('overdue_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.create_unique_constraint('ux_owner_task_stats_daily', ['day', 'company_id', 'owner_user_id'])
        batch_op.create_index(batch_op.f('ix_owner_task_stats_daily_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_owner_task_stats_daily_day'), ['day'], unique=False)
        batch_op.create_index(batch_op.f('ix_owner_task_stats_daily_owner_user_id'), ['owner_user_id'], unique=False)

    with op.batch_alter_table('packages', schema=None) as batch_op:
        batch_op.drop_column('request_quota_month')
        batch_op.drop_column('display_name')

    with op.batch_alter_table('task_stats_daily', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('man_total',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('man_done',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('open_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('in_progress_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('blocked_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('postponed_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('done_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('overdue_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('due_next_7_cnt',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.create_unique_constraint('ux_task_stats_daily', ['day', 'ai_system_id'])
        batch_op.create_index(batch_op.f('ix_task_stats_daily_ai_system_id'), ['ai_system_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_task_stats_daily_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_task_stats_daily_day'), ['day'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('invite_status', sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), server_default=sa.text('1'), nullable=False))
        batch_op.add_column(sa.Column('locked_until', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text("(datetime('now'))"), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), server_default=sa.text("(datetime('now'))"), nullable=False))
        batch_op.alter_column('is_super_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('failed_login_attempts',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.create_index(batch_op.f('ix_users_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_invite_status'), ['invite_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_locked_until'), ['locked_until'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_locked_until'))
        batch_op.drop_index(batch_op.f('ix_users_invite_status'))
        batch_op.drop_index(batch_op.f('ix_users_company_id'))
        batch_op.alter_column('failed_login_attempts',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('is_super_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('locked_until')
        batch_op.drop_column('is_active')
        batch_op.drop_column('invite_status')
        batch_op.drop_column('full_name')

    with op.batch_alter_table('task_stats_daily', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_stats_daily_day'))
        batch_op.drop_index(batch_op.f('ix_task_stats_daily_company_id'))
        batch_op.drop_index(batch_op.f('ix_task_stats_daily_ai_system_id'))
        batch_op.drop_constraint('ux_task_stats_daily', type_='unique')
        batch_op.alter_column('due_next_7_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('overdue_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('done_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('postponed_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('blocked_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('in_progress_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('open_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('man_done',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('man_total',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('packages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('display_name', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('request_quota_month', sa.INTEGER(), nullable=True))

    with op.batch_alter_table('owner_task_stats_daily', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_owner_task_stats_daily_owner_user_id'))
        batch_op.drop_index(batch_op.f('ix_owner_task_stats_daily_day'))
        batch_op.drop_index(batch_op.f('ix_owner_task_stats_daily_company_id'))
        batch_op.drop_constraint('ux_owner_task_stats_daily', type_='unique')
        batch_op.alter_column('overdue_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('total_cnt',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'ai_systems', ['ai_system_id'], ['id'])
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               server_default=sa.text("'queued'"),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('subject',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('channel',
               existing_type=sa.String(length=30),
               server_default=sa.text("'log'"),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('compliance_tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('priority', sa.INTEGER(), server_default=sa.text('3'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'ai_systems', ['ai_system_id'], ['id'])
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])
        batch_op.drop_index('ix_tasks_system_status')
        batch_op.drop_index('ix_tasks_owner_status')
        batch_op.drop_index('ix_tasks_company_status')
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_title'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_status'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_reference'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_owner_user_id'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_id'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_due_date'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_company_id'))
        batch_op.drop_index(batch_op.f('ix_compliance_tasks_ai_system_id'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text("(datetime('now'))"),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text("(datetime('now'))"),
               existing_nullable=False)
        batch_op.alter_column('reminder_days_before',
               existing_type=sa.INTEGER(),
               server_default=sa.text('7'),
               existing_nullable=True)
        batch_op.alter_column('mandatory',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
        batch_op.alter_column('severity',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'mandatory'"),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'open'"),
               existing_nullable=False)
        batch_op.alter_column('ai_system_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('company_packages', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])
        batch_op.create_foreign_key(None, 'packages', ['package_id'], ['id'])

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.add_column(sa.Column('suspended_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('activated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('last_activity_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('deleted_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('is_enterprise', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'"), nullable=False))
        batch_op.alter_column('company_type',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'deployer'"),
               nullable=False)

    with op.batch_alter_table('ai_systems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_activity_at', sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])

    # ### end Alembic commands ###